# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\State\NotificationStateProcessor:
        bind:
            $persistProcessor: '@api_platform.doctrine.orm.state.persist_processor'
            $removeProcessor: '@api_platform.doctrine.orm.state.remove_processor'
    App\State\VideoStateProcessor:
        bind:
            $persistProcessor: '@api_platform.doctrine.orm.state.persist_processor'
            #$removeProcessor: '@api_platform.doctrine.orm.state.remove_processor'
    acme_api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
    
   
    admin.competition:
        class: App\Admin\CompetitionAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Competition, manager_type: orm, label: Competition, group: Competitions, icon: "<i class=\"fa fa-music\"></i>"}
    admin.prime:
        class: App\Admin\PrimeAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Prime, manager_type: orm, label: Prime, group: Competitions }
    admin.tutor:
        class: App\Admin\TutorAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Tutor, manager_type: orm, label: Tutor, group: Application, icon: "<i class=\"fa fa-mobile\"></i>"}
    admin.userdata:
        class: App\Admin\UserDataAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\UserData, manager_type: orm, label: Users, group: Application }
    admin.videodata:
        class: App\Admin\VideoDataAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\VideoData, manager_type: orm, label: Videos, group: Application }
    admin.notification:
        class: App\Admin\NotificationAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Notification, manager_type: orm, label: Notification, group: Application }
    admin.artist:
        class: App\Admin\ArtistAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Artist, manager_type: orm, label: Artists, group: Votes, icon: "<i class=\"fas fa-vote-yea\"></i>" }
    admin.votemode:
        class: App\Admin\VoteModeAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\VoteMode, manager_type: orm, label: VoteModes, group: Votes }
    admin.vote:
        class: App\Admin\VoteAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Vote, manager_type: orm, label: Votes, group: Votes}
    admin.payment:
        class: App\Admin\PaymentAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Payment, manager_type: orm, label: Payments, group: Votes }
    app.menu_listener:
        class: App\EventListener\MenuBuilderListener
        tags:
            - { name: kernel.event_listener, event: sonata.admin.event.configure.menu.sidebar, method: addMenuItems }

    Symfony\Component\DependencyInjection\ContainerInterface: '@service_container'

    admin.comment:
        class: App\Admin\CommentAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Comment, controller: ~, manager_type: orm, group: admin, label: Comment }
